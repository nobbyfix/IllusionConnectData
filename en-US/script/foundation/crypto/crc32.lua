module("crc32", package.seeall)

local crc32tab = {
	0,
	1996959894,
	3993919788.0,
	2567524794.0,
	124634137,
	1886057615,
	3915621685.0,
	2657392035.0,
	249268274,
	2044508324,
	3772115230.0,
	2547177864.0,
	162941995,
	2125561021,
	3887607047.0,
	2428444049.0,
	498536548,
	1789927666,
	4089016648.0,
	2227061214.0,
	450548861,
	1843258603,
	4107580753.0,
	2211677639.0,
	325883990,
	1684777152,
	4251122042.0,
	2321926636.0,
	335633487,
	1661365465,
	4195302755.0,
	2366115317.0,
	997073096,
	1281953886,
	3579855332.0,
	2724688242.0,
	1006888145,
	1258607687,
	3524101629.0,
	2768942443.0,
	901097722,
	1119000684,
	3686517206.0,
	2898065728.0,
	853044451,
	1172266101,
	3705015759.0,
	2882616665.0,
	651767980,
	1373503546,
	3369554304.0,
	3218104598.0,
	565507253,
	1454621731,
	3485111705.0,
	3099436303.0,
	671266974,
	1594198024,
	3322730930.0,
	2970347812.0,
	795835527,
	1483230225,
	3244367275.0,
	3060149565.0,
	1994146192,
	31158534,
	2563907772.0,
	4023717930.0,
	1907459465,
	112637215,
	2680153253.0,
	3904427059.0,
	2013776290,
	251722036,
	2517215374.0,
	3775830040.0,
	2137656763,
	141376813,
	2439277719.0,
	3865271297.0,
	1802195444,
	476864866,
	2238001368.0,
	4066508878.0,
	1812370925,
	453092731,
	2181625025.0,
	4111451223.0,
	1706088902,
	314042704,
	2344532202.0,
	4240017532.0,
	1658658271,
	366619977,
	2362670323.0,
	4224994405.0,
	1303535960,
	984961486,
	2747007092.0,
	3569037538.0,
	1256170817,
	1037604311,
	2765210733.0,
	3554079995.0,
	1131014506,
	879679996,
	2909243462.0,
	3663771856.0,
	1141124467,
	855842277,
	2852801631.0,
	3708648649.0,
	1342533948,
	654459306,
	3188396048.0,
	3373015174.0,
	1466479909,
	544179635,
	3110523913.0,
	3462522015.0,
	1591671054,
	702138776,
	2966460450.0,
	3352799412.0,
	1504918807,
	783551873,
	3082640443.0,
	3233442989.0,
	3988292384.0,
	2596254646.0,
	62317068,
	1957810842,
	3939845945.0,
	2647816111.0,
	81470997,
	1943803523,
	3814918930.0,
	2489596804.0,
	225274430,
	2053790376,
	3826175755.0,
	2466906013.0,
	167816743,
	2097651377,
	4027552580.0,
	2265490386.0,
	503444072,
	1762050814,
	4150417245.0,
	2154129355.0,
	426522225,
	1852507879,
	4275313526.0,
	2312317920.0,
	282753626,
	1742555852,
	4189708143.0,
	2394877945.0,
	397917763,
	1622183637,
	3604390888.0,
	2714866558.0,
	953729732,
	1340076626,
	3518719985.0,
	2797360999.0,
	1068828381,
	1219638859,
	3624741850.0,
	2936675148.0,
	906185462,
	1090812512,
	3747672003.0,
	2825379669.0,
	829329135,
	1181335161,
	3412177804.0,
	3160834842.0,
	628085408,
	1382605366,
	3423369109.0,
	3138078467.0,
	570562233,
	1426400815,
	3317316542.0,
	2998733608.0,
	733239954,
	1555261956,
	3268935591.0,
	3050360625.0,
	752459403,
	1541320221,
	2607071920.0,
	3965973030.0,
	1969922972,
	40735498,
	2617837225.0,
	3943577151.0,
	1913087877,
	83908371,
	2512341634.0,
	3803740692.0,
	2075208622,
	213261112,
	2463272603.0,
	3855990285.0,
	2094854071,
	198958881,
	2262029012.0,
	4057260610.0,
	1759359992,
	534414190,
	2176718541.0,
	4139329115.0,
	1873836001,
	414664567,
	2282248934.0,
	4279200368.0,
	1711684554,
	285281116,
	2405801727.0,
	4167216745.0,
	1634467795,
	376229701,
	2685067896.0,
	3608007406.0,
	1308918612,
	956543938,
	2808555105.0,
	3495958263.0,
	1231636301,
	1047427035,
	2932959818.0,
	3654703836.0,
	1088359270,
	936918000,
	2847714899.0,
	3736837829.0,
	1202900863,
	817233897,
	3183342108.0,
	3401237130.0,
	1404277552,
	615818150,
	3134207493.0,
	3453421203.0,
	1423857449,
	601450431,
	3009837614.0,
	3294710456.0,
	1567103746,
	711928724,
	3020668471.0,
	3272380065.0,
	1510334235,
	755167117
}
local bit = _G.bit
local xor = bit and bit.bxor or function (a, b)
	local calc = 0

	for i = 31, 0, -1 do
		local val = 2^i
		local aa = false
		local bb = false

		if a == 0 then
			calc = calc + b

			break
		end

		if b == 0 then
			calc = calc + a

			break
		end

		if val <= a then
			aa = true
			a = a - val
		end

		if val <= b then
			bb = true
			b = b - val
		end

		if (not aa or not bb) and (aa or bb) then
			calc = calc + val
		end
	end

	return calc
end
local lshift = bit and bit.lshift or function (num, left)
	local res = num * 2^left

	return res % 4294967296.0
end
local rshift = bit and bit.rshift or function (num, right)
	local mod = 2^right
	local r = num % mod

	return (num - r) / mod
end

function crc32(str, crc)
	local start = 1
	local endpos = str and string.len(str) or 0
	crc = xor(crc or 0, 4294967295.0) % 4294967296.0
	local i = start

	while i <= endpos do
		local byte = string.byte(str, i)
		crc = xor(rshift(crc, 8), crc32tab[xor(crc, byte) % 256 + 1])
		i = i + 1
	end

	return xor(crc, 4294967295.0) % 4294967296.0
end
